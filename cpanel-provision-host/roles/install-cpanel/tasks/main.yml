---
- name: Check whether cPanel is installed
  command: grep -q "Congratulations! Your installation of cPanel & WHM" /var/log/cpanel-install.log
  register: cpanel_check
  check_mode: no
  failed_when: false
  changed_when: false
  tags: cpanel

- name: Register cpanel_installed variable
  set_fact:
    cpanel_installed: true
  when: cpanel_check.rc == 0
  tags: cpanel

- name: cPanel OS Pre-requisites
  include_tasks: os.yml
  when: cpanel_installed is not defined and ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'

- name: cPanel Package Pre-requisites
  include_tasks: yum.yml
  when: cpanel_installed is not defined

- name: cPanel Installer Task
  include_tasks: install.yml
  when: cpanel_installed is not defined

- name: cPanel Post Install Task
  include_tasks: post-install.yml

- name: Get installed version of cPanel
  shell: "/usr/local/cpanel/cpanel -V"
  changed_when: false
  check_mode: no
  register: cpanel_version_raw
  tags: always

- name: Create cpanel_version variable.
  set_fact:
    cpanel_version: "{{ cpanel_version_raw.stdout.split()[0] }}"
  tags: always

- name: Create cpanel_build_version variable.
  set_fact:
    cpanel_build_version: "{{ cpanel_version_raw.stdout.split()[2].strip(')') }}"
  tags: always

- name: Load credentials.yml with auth data
  include_vars:
    file: group_vars/credentials.yml
    name: auth

- name: Create directory /var/cpanel/customizations/brand to place branding image
  shell: cd /var/cpanel/customizations; mkdir -p brand; chmod 755 /var/cpanel/customizations/brand;

- name: Copy pexpect module
  copy:
    src: /usr/local/src/ansible-scripts/pexpect-3.3.tar.gz
    dest:  /var/cpanel/customizations/brand

- name: Install pexpect
  shell: cd /var/cpanel/customizations/brand; tar -xvf pexpect-3.3.tar.gz; cd pexpect-3.3; python setup.py install;

- name: Set root password
  expect:
    command: passwd root
    responses:
      (?i)password: '{{auth.cpanel_admin_password}}'

- name: Enable root password authentication
  shell: sed -i 's/PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_config; sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config; service sshd restart;
